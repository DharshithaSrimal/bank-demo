/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javadesktopapp;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import com.bankingsystem.dao.AccountDAO;
import com.bankingsystem.dao.TransactionDAO;
import com.bankingsystem.dao.UserDAO;
import com.bankingsystem.model.Account;
import com.bankingsystem.model.FixedAccount;
import com.bankingsystem.model.SavingsAccount;
import com.bankingsystem.model.Transaction;
import com.bankingsystem.model.User;
import java.io.IOException;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author 
 */
public class ApplicationMainMenu extends javax.swing.JFrame {

    static final String DRIVER = "com.mysql.jdbc.Driver"; //Driver
    //static final String DATABASE_URL1 = "jdbc:oracle:thin:@localhost:1521:orcl", "gebre", "gebre12";
    static final String DATABASE_URL = "jdbc:mysql://localhost/bank"; //JDBC
    Connection conn = null; // Manages connion
    Statement statement = null; // Query statement
    PreparedStatement ps; //Prepared statement
    ResultSet rs; //Result set

    /**
     * Creates new form BankInfoSyst
     */
    public ApplicationMainMenu() {
        // super(Title)
        super("Banking Information System");
        initComponents();
        setLocationRelativeTo(null);
        txtCustomerName1.setEditable(false);
        txtCurrBal1.setEditable(false);
        txtCustomerName2.setEditable(false);
        txtCurrBal2.setEditable(false);

    }

    public ApplicationMainMenu(String userType) {
        // super(Title) 
        super("Banking Information System");
        initComponents();
        setLocationRelativeTo(null);
        txtCustomerName1.setEditable(false);
        txtCurrBal1.setEditable(false);
        txtCustomerName2.setEditable(false);
        txtCurrBal2.setEditable(false);
        jPanel3.setVisible(false);
        if (userType == "Cashier") {
            btnOpenAcct.setVisible(false);
            btnDeleteAcct.setVisible(false);
            jPanelCashier.setVisible(false);
            btnCreateUser.setVisible(false);
            btnDeleteUser.setVisible(false);
            btnModifyUser.setVisible(false);
        } else if (userType == "Manager") {
            btnOpenAcct.setVisible(true);
            btnDeleteAcct.setVisible(true);
        }

    }

    public void getAllUsers() {
        DefaultTableModel model = (DefaultTableModel) tblAllUsers.getModel();
        try {

            int rows = 0;
            AccountDAO account = new AccountDAO();
            List<Account> accountUsers = (List<Account>) account.viewAllAccounts();
            //System.out.println();
            while (accountUsers.size() > rows) {
                model.setValueAt(accountUsers.get(rows).getAcctNo(), rows, 0);
                model.setValueAt(accountUsers.get(rows).getCustomerName(), rows, 1);
                model.setValueAt(accountUsers.get(rows).getBranch(), rows, 2);
                model.setValueAt(accountUsers.get(rows).getAccountType(), rows, 3);
                model.setValueAt(accountUsers.get(rows).getInitialBalance(), rows, 4);
                rows++;

            }
            String tot = String.valueOf(rows);
            lblTotal.setText(tot);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabcashier = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtCustomerName = new javax.swing.JTextField();
        cboSex = new javax.swing.JComboBox();
        btnOpenAcct = new javax.swing.JButton();
        btnModifyAcct = new javax.swing.JButton();
        btnDeleteAcct = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnSearchAcct = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        txtSearchAcctNo = new javax.swing.JTextField();
        txtAcctNo = new javax.swing.JTextField();
        txtInitialBalance = new javax.swing.JTextField();
        cboBranch = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAllUsers = new javax.swing.JTable();
        cboAccountType = new javax.swing.JComboBox();
        jLabel25 = new javax.swing.JLabel();
        btnSearchAcct1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        txtWithAmt1 = new javax.swing.JTextField();
        btnDeposit = new javax.swing.JButton();
        btnClear1 = new javax.swing.JButton();
        btnSearch1 = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        txtSearchAcctNo1 = new javax.swing.JTextField();
        txtCurrBal1 = new javax.swing.JTextField();
        txtCustomerName1 = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        btnRegister3 = new javax.swing.JButton();
        btnClear3 = new javax.swing.JButton();
        btnSearch4 = new javax.swing.JButton();
        txtSearchAcctNo2 = new javax.swing.JTextField();
        txtCustomerName2 = new javax.swing.JTextField();
        txtCurrBal2 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtWithAmt2 = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        txtSearchAcctNo3 = new javax.swing.JTextField();
        btnSearch2 = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        btnViewAll = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTransactions = new javax.swing.JTable();
        jLabel24 = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        jPanelCashier = new javax.swing.JPanel();
        txtUser = new javax.swing.JTextField();
        txtUserPw = new javax.swing.JPasswordField();
        btnCreateUser = new javax.swing.JButton();
        btnModifyUser = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        txtSearchUser = new javax.swing.JTextField();
        btnSearchAcct2 = new javax.swing.JButton();
        btnSearchAcct3 = new javax.swing.JButton();
        btnDeleteUser = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblAllUsers1 = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 153, 255));

        jTabcashier.setBackground(new java.awt.Color(204, 204, 204));
        jTabcashier.setForeground(new java.awt.Color(0, 102, 102));
        jTabcashier.setFont(new java.awt.Font("Eras Demi ITC", 1, 26)); // NOI18N

        jPanel3.setName("initialBalance"); // NOI18N

        jLabel9.setFont(new java.awt.Font("Eras Bold ITC", 0, 36)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 153, 153));
        jLabel9.setText("Open Bank Account");

        jLabel10.setFont(new java.awt.Font("Eras Demi ITC", 0, 22)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 153, 153));
        jLabel10.setText("Acct No:");

        jLabel11.setFont(new java.awt.Font("Eras Demi ITC", 0, 22)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 153, 153));
        jLabel11.setText("Customer Name:");

        jLabel12.setFont(new java.awt.Font("Eras Demi ITC", 0, 22)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 153, 153));
        jLabel12.setText("Gender:");

        jLabel13.setFont(new java.awt.Font("Eras Demi ITC", 0, 22)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 153, 153));
        jLabel13.setText("Branch:");

        jLabel14.setFont(new java.awt.Font("Eras Demi ITC", 0, 22)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 153, 153));
        jLabel14.setText("Initial Balance:");

        txtCustomerName.setFont(new java.awt.Font("Eras Demi ITC", 0, 24)); // NOI18N
        txtCustomerName.setForeground(new java.awt.Color(0, 153, 153));

        cboSex.setFont(new java.awt.Font("Eras Demi ITC", 0, 24)); // NOI18N
        cboSex.setForeground(new java.awt.Color(0, 153, 153));
        cboSex.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Sex", "Male", "Female" }));

        btnOpenAcct.setFont(new java.awt.Font("Eras Demi ITC", 0, 24)); // NOI18N
        btnOpenAcct.setForeground(new java.awt.Color(0, 153, 153));
        btnOpenAcct.setText("Open");
        btnOpenAcct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenAcctActionPerformed(evt);
            }
        });

        btnModifyAcct.setFont(new java.awt.Font("Eras Demi ITC", 0, 24)); // NOI18N
        btnModifyAcct.setForeground(new java.awt.Color(0, 153, 153));
        btnModifyAcct.setText("Modify");
        btnModifyAcct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyAcctActionPerformed(evt);
            }
        });

        btnDeleteAcct.setFont(new java.awt.Font("Eras Demi ITC", 0, 24)); // NOI18N
        btnDeleteAcct.setForeground(new java.awt.Color(0, 153, 153));
        btnDeleteAcct.setText("Delete");
        btnDeleteAcct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteAcctActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Eras Demi ITC", 0, 24)); // NOI18N
        btnClear.setForeground(new java.awt.Color(0, 153, 153));
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnSearchAcct.setFont(new java.awt.Font("Eras Demi ITC", 0, 24)); // NOI18N
        btnSearchAcct.setForeground(new java.awt.Color(0, 153, 153));
        btnSearchAcct.setText("Search");
        btnSearchAcct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchAcctActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Eras Demi ITC", 0, 22)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 153, 153));
        jLabel15.setText("Enter Acct No:");

        txtSearchAcctNo.setFont(new java.awt.Font("Eras Demi ITC", 0, 24)); // NOI18N
        txtSearchAcctNo.setForeground(new java.awt.Color(0, 153, 153));
        txtSearchAcctNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchAcctNoActionPerformed(evt);
            }
        });

        txtAcctNo.setFont(new java.awt.Font("Eras Demi ITC", 0, 24)); // NOI18N
        txtAcctNo.setForeground(new java.awt.Color(0, 153, 153));

        txtInitialBalance.setFont(new java.awt.Font("Eras Demi ITC", 0, 24)); // NOI18N
        txtInitialBalance.setForeground(new java.awt.Color(0, 153, 153));
        txtInitialBalance.setName("initialBalance"); // NOI18N

        cboBranch.setFont(new java.awt.Font("Eras Demi ITC", 0, 24)); // NOI18N
        cboBranch.setForeground(new java.awt.Color(0, 153, 153));
        cboBranch.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Branch", "Anuradhapura", "Balangoda", "Colombo", "Gampaha", "Kaluthara", "Rathnapura" }));

        tblAllUsers.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        tblAllUsers.setForeground(new java.awt.Color(0, 153, 153));
        tblAllUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Bank Account", "Customer Name", "Branch", "Account Type", "Current Balance"
            }
        ));
        jScrollPane2.setViewportView(tblAllUsers);
        if (tblAllUsers.getColumnModel().getColumnCount() > 0) {
            tblAllUsers.getColumnModel().getColumn(2).setResizable(false);
            tblAllUsers.getColumnModel().getColumn(3).setHeaderValue("Account Type");
            tblAllUsers.getColumnModel().getColumn(4).setResizable(false);
            tblAllUsers.getColumnModel().getColumn(4).setHeaderValue("Current Balance");
        }

        cboAccountType.setFont(new java.awt.Font("Eras Demi ITC", 0, 24)); // NOI18N
        cboAccountType.setForeground(new java.awt.Color(0, 153, 153));
        cboAccountType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Account Type", "Savings", "Fixed", " " }));

        jLabel25.setFont(new java.awt.Font("Eras Demi ITC", 0, 22)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(0, 153, 153));
        jLabel25.setText("Account Type:");

        btnSearchAcct1.setFont(new java.awt.Font("Eras Demi ITC", 0, 24)); // NOI18N
        btnSearchAcct1.setForeground(new java.awt.Color(0, 153, 153));
        btnSearchAcct1.setText("Search All");
        btnSearchAcct1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchAcct1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel25))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(cboSex, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cboBranch, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtInitialBalance, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cboAccountType, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(118, 118, 118))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtSearchAcctNo, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                                            .addComponent(txtAcctNo)
                                            .addComponent(txtCustomerName))
                                        .addGap(31, 31, 31)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btnSearchAcct1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnSearchAcct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(btnOpenAcct, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModifyAcct, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteAcct, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSearchAcct, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)
                            .addComponent(txtSearchAcctNo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtAcctNo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearchAcct1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(txtCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboSex, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(cboBranch, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboAccountType, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(txtInitialBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnOpenAcct, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnModifyAcct, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDeleteAcct, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabcashier.addTab("Open Account", jPanel3);

        jLabel18.setFont(new java.awt.Font("Eras Bold ITC", 0, 36)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 153, 153));
        jLabel18.setText("Deposit Money");

        jLabel19.setFont(new java.awt.Font("Eras Demi ITC", 0, 22)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 153, 153));
        jLabel19.setText("Current Balance:");

        jLabel20.setFont(new java.awt.Font("Eras Demi ITC", 0, 22)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 153, 153));
        jLabel20.setText("Amount:");

        jLabel22.setFont(new java.awt.Font("Eras Demi ITC", 0, 22)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 153, 153));
        jLabel22.setText("Customer Name:");

        txtWithAmt1.setFont(new java.awt.Font("Eras Demi ITC", 0, 24)); // NOI18N
        txtWithAmt1.setForeground(new java.awt.Color(0, 153, 153));
        txtWithAmt1.setName("depositAmount"); // NOI18N

        btnDeposit.setFont(new java.awt.Font("Eras Demi ITC", 0, 24)); // NOI18N
        btnDeposit.setForeground(new java.awt.Color(0, 153, 153));
        btnDeposit.setText("Deposit");
        btnDeposit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDepositActionPerformed(evt);
            }
        });

        btnClear1.setFont(new java.awt.Font("Eras Demi ITC", 0, 24)); // NOI18N
        btnClear1.setForeground(new java.awt.Color(0, 153, 153));
        btnClear1.setText("Clear");
        btnClear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClear1ActionPerformed(evt);
            }
        });

        btnSearch1.setFont(new java.awt.Font("Eras Demi ITC", 0, 24)); // NOI18N
        btnSearch1.setForeground(new java.awt.Color(0, 153, 153));
        btnSearch1.setText("Search");
        btnSearch1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearch1ActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Eras Demi ITC", 0, 22)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(0, 153, 153));
        jLabel26.setText("Enter Acct No:");

        txtSearchAcctNo1.setFont(new java.awt.Font("Eras Demi ITC", 0, 24)); // NOI18N
        txtSearchAcctNo1.setForeground(new java.awt.Color(0, 153, 153));
        txtSearchAcctNo1.setName("accNo"); // NOI18N
        txtSearchAcctNo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchAcctNo1ActionPerformed(evt);
            }
        });

        txtCurrBal1.setFont(new java.awt.Font("Eras Demi ITC", 0, 24)); // NOI18N
        txtCurrBal1.setForeground(new java.awt.Color(0, 153, 153));
        txtCurrBal1.setName("balance"); // NOI18N

        txtCustomerName1.setFont(new java.awt.Font("Eras Demi ITC", 0, 24)); // NOI18N
        txtCustomerName1.setForeground(new java.awt.Color(0, 153, 153));
        txtCustomerName1.setName("cusName"); // NOI18N
        txtCustomerName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustomerName1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel26)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 112, Short.MAX_VALUE)
                        .addComponent(jLabel18)
                        .addGap(0, 652, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSearchAcctNo1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSearch1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(620, Short.MAX_VALUE))))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCustomerName1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCurrBal1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtWithAmt1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(btnDeposit)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnClear1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26)
                            .addComponent(btnSearch1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSearchAcctNo1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22)
                    .addComponent(txtCustomerName1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCurrBal1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtWithAmt1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeposit, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(131, Short.MAX_VALUE))
        );

        jTabcashier.addTab("Deposit Money", jPanel5);

        jLabel27.setFont(new java.awt.Font("Eras Demi ITC", 1, 36)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(0, 153, 153));
        jLabel27.setText("Withdraw Money");

        btnRegister3.setFont(new java.awt.Font("Eras Demi ITC", 0, 24)); // NOI18N
        btnRegister3.setForeground(new java.awt.Color(0, 153, 153));
        btnRegister3.setText("Withdraw");
        btnRegister3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegister3ActionPerformed(evt);
            }
        });

        btnClear3.setFont(new java.awt.Font("Eras Demi ITC", 0, 24)); // NOI18N
        btnClear3.setForeground(new java.awt.Color(0, 153, 153));
        btnClear3.setText("Clear");
        btnClear3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClear3ActionPerformed(evt);
            }
        });

        btnSearch4.setFont(new java.awt.Font("Eras Demi ITC", 0, 24)); // NOI18N
        btnSearch4.setForeground(new java.awt.Color(0, 153, 153));
        btnSearch4.setText("Search");
        btnSearch4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearch4ActionPerformed(evt);
            }
        });

        txtSearchAcctNo2.setFont(new java.awt.Font("Eras Demi ITC", 0, 24)); // NOI18N
        txtSearchAcctNo2.setForeground(new java.awt.Color(0, 153, 153));
        txtSearchAcctNo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchAcctNo2ActionPerformed(evt);
            }
        });

        txtCustomerName2.setFont(new java.awt.Font("Eras Demi ITC", 0, 24)); // NOI18N
        txtCustomerName2.setForeground(new java.awt.Color(0, 153, 153));
        txtCustomerName2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustomerName2ActionPerformed(evt);
            }
        });

        txtCurrBal2.setFont(new java.awt.Font("Eras Demi ITC", 0, 24)); // NOI18N
        txtCurrBal2.setForeground(new java.awt.Color(0, 153, 153));

        jLabel21.setFont(new java.awt.Font("Eras Demi ITC", 0, 22)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 153, 153));
        jLabel21.setText("Amount:");

        txtWithAmt2.setFont(new java.awt.Font("Eras Demi ITC", 0, 24)); // NOI18N
        txtWithAmt2.setForeground(new java.awt.Color(0, 153, 153));

        jLabel34.setFont(new java.awt.Font("Eras Demi ITC", 0, 22)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(0, 153, 153));
        jLabel34.setText("Current Balance:");

        jLabel35.setFont(new java.awt.Font("Eras Demi ITC", 0, 22)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(0, 153, 153));
        jLabel35.setText("Customer Name:");

        jLabel36.setFont(new java.awt.Font("Eras Demi ITC", 0, 22)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(0, 153, 153));
        jLabel36.setText("Enter Acct No:");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel34)
                            .addComponent(jLabel21)
                            .addComponent(jLabel35))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCurrBal2, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                            .addComponent(txtWithAmt2)
                            .addComponent(txtCustomerName2)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(jLabel27))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addComponent(btnRegister3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClear3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel36)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSearchAcctNo2, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSearch4, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(630, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel27)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearchAcctNo2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36)
                    .addComponent(btnSearch4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(txtCustomerName2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(txtCurrBal2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtWithAmt2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegister3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(110, Short.MAX_VALUE))
        );

        jTabcashier.addTab("Withdraw Money", jPanel6);

        jLabel17.setFont(new java.awt.Font("Eras Demi ITC", 0, 36)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 153, 153));
        jLabel17.setText("Bank Transactions");

        txtSearchAcctNo3.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N

        btnSearch2.setFont(new java.awt.Font("Eras Demi ITC", 0, 24)); // NOI18N
        btnSearch2.setForeground(new java.awt.Color(0, 153, 153));
        btnSearch2.setText("Search");
        btnSearch2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearch2ActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Eras Demi ITC", 1, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 153, 153));
        jLabel23.setText("Search Acct No:");

        btnViewAll.setFont(new java.awt.Font("Eras Demi ITC", 0, 24)); // NOI18N
        btnViewAll.setForeground(new java.awt.Color(0, 153, 153));
        btnViewAll.setText("View All");
        btnViewAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewAllActionPerformed(evt);
            }
        });

        tblTransactions.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        tblTransactions.setForeground(new java.awt.Color(0, 153, 153));
        tblTransactions.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Bank Account", "Customer Name", "Deposit", "Withdrawal", "Current Balance"
            }
        ));
        jScrollPane1.setViewportView(tblTransactions);

        jLabel24.setFont(new java.awt.Font("Eras Light ITC", 1, 24)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(0, 153, 153));
        jLabel24.setText("Transactions:");

        lblTotal.setFont(new java.awt.Font("Eras Light ITC", 1, 24)); // NOI18N
        lblTotal.setForeground(new java.awt.Color(0, 153, 153));
        lblTotal.setText("0");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 794, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel24)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(lblTotal))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel17)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(jLabel23)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtSearchAcctNo3, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnViewAll, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnSearch2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(135, 135, 135))))
                .addContainerGap(268, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearchAcctNo3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23)
                    .addComponent(btnViewAll, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(lblTotal))
                .addGap(27, 27, 27))
        );

        jTabcashier.addTab("Bank Transactions", jPanel4);

        btnCreateUser.setFont(new java.awt.Font("Eras Demi ITC", 0, 24)); // NOI18N
        btnCreateUser.setForeground(new java.awt.Color(0, 153, 153));
        btnCreateUser.setText("Create");
        btnCreateUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateUserActionPerformed(evt);
            }
        });

        btnModifyUser.setFont(new java.awt.Font("Eras Demi ITC", 0, 24)); // NOI18N
        btnModifyUser.setForeground(new java.awt.Color(0, 153, 153));
        btnModifyUser.setText("Modify");
        btnModifyUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyUserActionPerformed(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Eras Demi ITC", 0, 22)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(0, 153, 153));
        jLabel28.setText("Enter Password:");

        jLabel29.setFont(new java.awt.Font("Eras Demi ITC", 0, 22)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(0, 153, 153));
        jLabel29.setText("Enter Username:");

        jLabel30.setFont(new java.awt.Font("Eras Demi ITC", 0, 22)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(0, 153, 153));
        jLabel30.setText("Search Username:");

        btnSearchAcct2.setFont(new java.awt.Font("Eras Demi ITC", 0, 24)); // NOI18N
        btnSearchAcct2.setForeground(new java.awt.Color(0, 153, 153));
        btnSearchAcct2.setText("Search All");
        btnSearchAcct2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchAcct2ActionPerformed(evt);
            }
        });

        btnSearchAcct3.setFont(new java.awt.Font("Eras Demi ITC", 0, 24)); // NOI18N
        btnSearchAcct3.setForeground(new java.awt.Color(0, 153, 153));
        btnSearchAcct3.setText("Search");
        btnSearchAcct3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchAcct3ActionPerformed(evt);
            }
        });

        btnDeleteUser.setFont(new java.awt.Font("Eras Demi ITC", 0, 24)); // NOI18N
        btnDeleteUser.setForeground(new java.awt.Color(0, 153, 153));
        btnDeleteUser.setText("Delete");
        btnDeleteUser.setPreferredSize(new java.awt.Dimension(143, 37));
        btnDeleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteUserActionPerformed(evt);
            }
        });

        tblAllUsers1.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        tblAllUsers1.setForeground(new java.awt.Color(0, 153, 153));
        tblAllUsers1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Id", "Username", "Role"
            }
        ));
        jScrollPane3.setViewportView(tblAllUsers1);
        if (tblAllUsers1.getColumnModel().getColumnCount() > 0) {
            tblAllUsers1.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout jPanelCashierLayout = new javax.swing.GroupLayout(jPanelCashier);
        jPanelCashier.setLayout(jPanelCashierLayout);
        jPanelCashierLayout.setHorizontalGroup(
            jPanelCashierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCashierLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanelCashierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel30)
                    .addComponent(jLabel28)
                    .addComponent(jLabel29))
                .addGap(18, 18, 18)
                .addGroup(jPanelCashierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSearchUser, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelCashierLayout.createSequentialGroup()
                        .addComponent(btnCreateUser)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModifyUser))
                    .addComponent(txtUserPw, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanelCashierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCashierLayout.createSequentialGroup()
                        .addGroup(jPanelCashierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSearchAcct2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSearchAcct3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(36, 36, 36))
                    .addGroup(jPanelCashierLayout.createSequentialGroup()
                        .addComponent(btnDeleteUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61))
        );
        jPanelCashierLayout.setVerticalGroup(
            jPanelCashierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCashierLayout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addGroup(jPanelCashierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCashierLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanelCashierLayout.createSequentialGroup()
                        .addGroup(jPanelCashierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelCashierLayout.createSequentialGroup()
                                .addGroup(jPanelCashierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel30)
                                    .addComponent(txtSearchUser, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(jPanelCashierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel29))
                                .addGap(31, 31, 31)
                                .addGroup(jPanelCashierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtUserPw, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel28))
                                .addGap(33, 33, 33)
                                .addGroup(jPanelCashierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnCreateUser)
                                    .addComponent(btnModifyUser)
                                    .addComponent(btnDeleteUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanelCashierLayout.createSequentialGroup()
                                .addComponent(btnSearchAcct3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSearchAcct2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jTabcashier.addTab("Cashier Accounts", jPanelCashier);

        jLabel16.setFont(new java.awt.Font("Eras Medium ITC", 1, 60)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Banking System");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(247, 247, 247)
                        .addComponent(jLabel16))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTabcashier, javax.swing.GroupLayout.PREFERRED_SIZE, 1222, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabcashier, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        txtSearchAcctNo.setText("");
        txtAcctNo.setText("");
        txtCustomerName.setText("");
        cboSex.setSelectedIndex(0);
        cboBranch.setSelectedIndex(0);
        txtInitialBalance.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnViewAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewAllActionPerformed

        DefaultTableModel model = (DefaultTableModel) tblTransactions.getModel();
        try {
            String acctNo = txtSearchAcctNo3.getText();
            int total = 0;

            int rows = 0;
            TransactionDAO transaction = new TransactionDAO();
            List<Transaction> accountTransaction = transaction.viewAllTransactions();
            //System.out.println();
            while (accountTransaction.size() > rows) {
                model.setValueAt(accountTransaction.get(rows).getAcctNo(), rows, 0);
                model.setValueAt(accountTransaction.get(rows).getCustomerName(), rows, 1);
                model.setValueAt(accountTransaction.get(rows).getDeposit(), rows, 2);
                model.setValueAt(accountTransaction.get(rows).getWithdraw(), rows, 3);
                model.setValueAt(accountTransaction.get(rows).getBalance(), rows, 4);
                //model.setValueAt(accountTransaction.get(rows).getDate(), rows, 5);
                rows++;
                total = rows;

            }
            String tot = String.valueOf(rows);
            lblTotal.setText(tot);

            if (total == 0) {
                JOptionPane.showMessageDialog(this, "No Record Found Matching Your Search Criteria " + acctNo + "", "Banking System - No Record Found.", JOptionPane.INFORMATION_MESSAGE);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnViewAllActionPerformed

    private void btnOpenAcctActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenAcctActionPerformed
        // TODO add your handling code here:
        try {
            String AcctNumber = "";
            String acctNo = txtAcctNo.getText();
            String customerName = txtCustomerName.getText();
            String sex = (String) cboSex.getSelectedItem();
            String branch = (String) cboBranch.getSelectedItem();
            String accountType = (String) cboAccountType.getSelectedItem();

            String initial_balance = txtInitialBalance.getText();
            int se = cboSex.getSelectedIndex();
            int br = cboBranch.getSelectedIndex();
            int at = cboAccountType.getSelectedIndex();

            if (acctNo.isEmpty() || customerName.isEmpty() || se == 0 || br == 0 || at == 0 || initial_balance.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please Fill in All Required Information!", "Banking SYstem - Required Information.", JOptionPane.INFORMATION_MESSAGE);
            } else {
                AccountDAO account = new AccountDAO();
                Account existingcount = account.selectAccount(acctNo);
                double initial_balance1 = Double.parseDouble(initial_balance);

                if (existingcount != null) {
                    AcctNumber = existingcount.getAcctNo();
                }
                if (acctNo.intern().equals(AcctNumber.intern())) {
                    //Info Already Exist (Must Not Insert Duplicate Info)
                    JOptionPane.showMessageDialog(this, "Bank Information With Account Number " + acctNo + " Already Exist!", "Banking System - Bank Already Exist.", JOptionPane.INFORMATION_MESSAGE);
                } else if (!acctNo.intern().equals(AcctNumber.intern())) {

                    if (accountType == "Savings") {
                        Account newAccount = new SavingsAccount(acctNo, customerName, sex, branch, accountType, initial_balance1);
                        account.createAccount(newAccount);
                    } else if (accountType == "Fixed") {
                        Account newAccount = new FixedAccount(acctNo, customerName, sex, branch, accountType, initial_balance1);
                        account.createAccount(newAccount);
                    }

                    JOptionPane.showMessageDialog(this, "Bank Account has been Created Successfully!", "Banking System - Bank Account Created.", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error! Can't Connect be to Database! Please Contact System Administrator.", "Banking System - Connection Error.", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnOpenAcctActionPerformed

    private void btnSearchAcctActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchAcctActionPerformed

        try {
            String acctNo = txtSearchAcctNo.getText();

            if (acctNo.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please Enter Bank Account Number to Search!", "Banking System - Required Information.", JOptionPane.INFORMATION_MESSAGE);
            } else {
                AccountDAO account = new AccountDAO();
                Account existingAccount = account.selectAccount(acctNo);

                if (existingAccount != null) {
                    txtAcctNo.setText(existingAccount.getAcctNo());
                    txtCustomerName.setText(existingAccount.getCustomerName());
                    cboSex.setSelectedItem(existingAccount.getSex());
                    cboBranch.setSelectedItem(existingAccount.getBranch());
                    cboAccountType.setSelectedItem(existingAccount.getAccountType());
                    txtInitialBalance.setText(String.valueOf(existingAccount.getInitialBalance()));
                } else {
                    JOptionPane.showMessageDialog(this, "Bank Information With Account Number " + txtSearchAcctNo.getText() + " Not Found!", "Banking System - Bank Not Found", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error! Can't Connect be to Database! Please Contact System Administrator.", "Banking System - Connection Error.", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnSearchAcctActionPerformed

    private void btnModifyAcctActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyAcctActionPerformed
        // TODO add your handling code here:
        try {
            String AcctNumber = "";
            String acctNo = txtAcctNo.getText();
            String customerName = txtCustomerName.getText();
            String sex = (String) cboSex.getSelectedItem();
            String branch = (String) cboBranch.getSelectedItem();
            String initial_balance = txtInitialBalance.getText();
            String accountType = (String) cboAccountType.getSelectedItem();
            int at = cboAccountType.getSelectedIndex();
            int se = cboSex.getSelectedIndex();
            int bra = cboBranch.getSelectedIndex();

            if (acctNo.isEmpty() || customerName.isEmpty() || se == 0 || bra == 0 || at == 0 || initial_balance.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please Fill in All Required Information!", "Banking System - Required Information.", JOptionPane.INFORMATION_MESSAGE);
            } else {
                double initial_balance1 = Double.parseDouble(initial_balance);
                AccountDAO account = new AccountDAO();
                Account existingcount = account.selectAccount(acctNo);

                if (existingcount != null) {
                    AcctNumber = existingcount.getAcctNo();
                }
                if (!acctNo.intern().equals(AcctNumber.intern())) {
                    //Info Doesn't Exist
                    JOptionPane.showMessageDialog(this, "Bank Information With Account Number " + acctNo + " Doesn't Exist!", "Banking System - Bank Acct Doesn't Exist.", JOptionPane.INFORMATION_MESSAGE);
                } else if (acctNo.intern().equals(AcctNumber.intern())) {
                    if (accountType == "Savings") {
                        Account newAccount = new SavingsAccount(acctNo, customerName, sex, branch, accountType, initial_balance1);
                        account.updateAccount(newAccount);
                    } else if (accountType == "Fixed") {
                        Account newAccount = new FixedAccount(acctNo, customerName, sex, branch, accountType, initial_balance1);
                        account.updateAccount(newAccount);
                    }
                    //Successfully Updated
                    JOptionPane.showMessageDialog(this, "Bank Acct Information has been Updated Successfully!", "Banking System - Bank Acct Updated.", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error! Can't Connect be to Database! Please Contact System Administrator.", "Banking System - Connection Error.", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnModifyAcctActionPerformed

    private void btnDeleteAcctActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteAcctActionPerformed
        try {
            // TODO add your handling code here:
            String AcctNumber = "";
            String acctNo = txtAcctNo.getText();
            String customerName = txtCustomerName.getText();
            String sex = (String) cboSex.getSelectedItem();
            String branch = (String) cboBranch.getSelectedItem();
            String initial_balance = txtInitialBalance.getText();
            String accountType = (String) cboAccountType.getSelectedItem();
            AccountDAO account = new AccountDAO();
            Account existingcount = account.selectAccount(acctNo);

            if (existingcount != null) {
                AcctNumber = existingcount.getAcctNo();
            }
            if (!acctNo.intern().equals(AcctNumber.intern())) {
                //Info Doesn't Exist
                JOptionPane.showMessageDialog(this, "Bank Information With Account Number " + acctNo + " Doesn't Exist!", "Banking System - Bank Acct Doesn't Exist.", JOptionPane.INFORMATION_MESSAGE);
            } else if (acctNo.intern().equals(AcctNumber.intern())) {
                double initial_balance1 = Double.parseDouble(initial_balance);
                Account newAccount = new SavingsAccount(acctNo, customerName, sex, branch, accountType, initial_balance1);
                account.deleteAccount(newAccount);

                //Successfully Deleted
                JOptionPane.showMessageDialog(this, "Bank Acct Information has been Deleted Successfully!", "Banking System - Bank Acct Deleted.", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ApplicationMainMenu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ApplicationMainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDeleteAcctActionPerformed

    private void txtSearchAcctNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchAcctNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchAcctNoActionPerformed

    private void btnSearch2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearch2ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblTransactions.getModel();
        try {
            String acctNo = txtSearchAcctNo3.getText();
            int total = 0;
            if (acctNo.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please Enter Bank Account Number to Search!", "Banking System - Required Information.", JOptionPane.INFORMATION_MESSAGE);
            } else {

                int rows = 0;
                TransactionDAO transaction = new TransactionDAO();
                List<Transaction> accountTransaction = transaction.selectTransactionsById(acctNo);
                //System.out.println();
                while (accountTransaction.size() > rows) {
                    model.setValueAt(accountTransaction.get(rows).getAcctNo(), rows, 0);
                    model.setValueAt(accountTransaction.get(rows).getCustomerName(), rows, 1);
                    model.setValueAt(accountTransaction.get(rows).getDeposit(), rows, 2);
                    model.setValueAt(accountTransaction.get(rows).getWithdraw(), rows, 3);
                    model.setValueAt(accountTransaction.get(rows).getBalance(), rows, 4);
                    model.setValueAt(accountTransaction.get(rows).getDate(), rows, 5);
                    rows++;
                    total = rows;

                }
                String tot = String.valueOf(rows);
                lblTotal.setText(tot);

                if (total == 0) {
                    JOptionPane.showMessageDialog(this, "No Record Found Matching Your Search Criteria " + acctNo + "", "Banking System - No Record Found.", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnSearch2ActionPerformed

    private void btnDepositActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDepositActionPerformed

        try {
            String AcctNumber = "";
            String acctNo = txtSearchAcctNo1.getText();
            String customerName = txtCustomerName1.getText();
            String currbal = txtCurrBal1.getText();
            String amount = txtWithAmt1.getText();

            if (acctNo.isEmpty() || customerName.isEmpty() || currbal.isEmpty() || amount.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please Fill in All Required Information!", "Banking System - Required Information.", JOptionPane.INFORMATION_MESSAGE);
            } else {
                double currbal1 = Double.parseDouble(currbal);
                double deposit = Double.parseDouble(amount);
                double bal = currbal1 + deposit; //deposit
                double withdraw = 0;

                AccountDAO account = new AccountDAO();
                Account existingAccount = account.selectAccount(acctNo);

                if (existingAccount != null) {
                    AcctNumber = existingAccount.getAcctNo();
                }

                if (!acctNo.intern().equals(AcctNumber.intern())) {
                    //Info Already Exist (Must Not Insert Duplicate Info)
                    JOptionPane.showMessageDialog(this, "Bank Information With Account Number " + acctNo + " Already Exist!", "Banking System - Bank Already Exist.", JOptionPane.INFORMATION_MESSAGE);
                } else if (acctNo.intern().equals(AcctNumber.intern())) {

                    Transaction newDeposit = new Transaction(acctNo, customerName, deposit, withdraw, bal);
                    TransactionDAO transaction = new TransactionDAO();
                    transaction.makeTransaction(newDeposit);
                    
                    Account newAccount = new SavingsAccount(acctNo, customerName, existingAccount.getSex(), existingAccount.getBranch(), existingAccount.getAccountType(), bal);
                    account.updateAccount(newAccount);
                    JOptionPane.showMessageDialog(this, "Bank Information has been Deposited Successfully!", "Banking System - Bank Deposited.", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error! Can't Connect be to Database! Please Contact System Administrator.", "Banking System - Connection Error.", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnDepositActionPerformed

    private void btnClear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClear1ActionPerformed
        // TODO add your handling code here:
        txtSearchAcctNo1.setText("");
        txtCustomerName1.setText("");
        txtCurrBal1.setText("");
        txtWithAmt1.setText("");
    }//GEN-LAST:event_btnClear1ActionPerformed

    private void btnSearch1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearch1ActionPerformed
        // TODO add your handling code here:
        try {
            String acctNo = txtSearchAcctNo1.getText();

            if (acctNo.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please Enter Bank Account Number to Search!", "Banking System - Required Information.", JOptionPane.INFORMATION_MESSAGE);
            } else {
                AccountDAO account = new AccountDAO();
                Account existingAccount = account.selectAccount(acctNo);

                if (existingAccount != null) {
                    txtSearchAcctNo1.setText(existingAccount.getAcctNo());
                    txtCustomerName1.setText(existingAccount.getCustomerName());
                    txtCurrBal1.setText(String.valueOf(existingAccount.getInitialBalance()));
                } else {
                    JOptionPane.showMessageDialog(this, "Bank Information With Account Number " + txtSearchAcctNo.getText() + " Not Found!", "Banking System - Bank Not Found", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error! Can't Connect be to Database! Please Contact System Administrator.", "Banking System - Connection Error.", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnSearch1ActionPerformed

    private void txtSearchAcctNo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchAcctNo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchAcctNo1ActionPerformed

    private void txtCustomerName1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustomerName1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCustomerName1ActionPerformed

    private void btnRegister3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegister3ActionPerformed
        // TODO add your handling code here:
        try {
            String AcctNumber = "", balance = "";
            String acctNo = txtSearchAcctNo2.getText();
            String customerName = txtCustomerName2.getText();
            String currbal = txtCurrBal2.getText();
            String amount = txtWithAmt2.getText();

            if (acctNo.isEmpty() || customerName.isEmpty() || currbal.isEmpty() || amount.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please Fill in All Required Information!", "Banking System - Required Information.", JOptionPane.INFORMATION_MESSAGE);
            } else {
                double currbal1 = Double.parseDouble(currbal);
                double deposit = Double.parseDouble(amount);
                double bal = currbal1 - deposit; //deposit
                double withdraw = 0;

                AccountDAO account = new AccountDAO();
                Account existingAccount = account.selectAccount(acctNo);

                if (existingAccount != null) {
                    AcctNumber = existingAccount.getAcctNo();
                }

                if (!acctNo.intern().equals(AcctNumber.intern())) {
                    //Info Already Exist (Must Not Insert Duplicate Info)
                    JOptionPane.showMessageDialog(this, "Bank Information With Account Number " + acctNo + " Already Exist!", "Banking System - Bank Already Exist.", JOptionPane.INFORMATION_MESSAGE);
                } else if (acctNo.intern().equals(AcctNumber.intern())) {

                    Transaction newDeposit = new Transaction(acctNo, customerName, deposit, withdraw, bal);
                    TransactionDAO transaction = new TransactionDAO();
                    transaction.makeTransaction(newDeposit);
                    
                    Account newAccount = new SavingsAccount(acctNo, customerName, existingAccount.getSex(), existingAccount.getBranch(), existingAccount.getAccountType(), bal);
                    account.updateAccount(newAccount);
                    JOptionPane.showMessageDialog(this, "Bank Information has been Deposited Successfully!", "Banking System - Bank Deposited.", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error! Can't Connect be to Database! Please Contact System Administrator.", "Banking System - Connection Error.", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnRegister3ActionPerformed

    private void btnClear3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClear3ActionPerformed
        // TODO add your handling code here:
        txtSearchAcctNo2.setText("");
        txtCustomerName2.setText("");
        txtCurrBal2.setText("");
        txtWithAmt2.setText("");
    }//GEN-LAST:event_btnClear3ActionPerformed

    private void btnSearch4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearch4ActionPerformed
        // TODO add your handling code here:
        try {
            String acctNo = txtSearchAcctNo2.getText();

            if (acctNo.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please Enter Bank Account Number to Search!", "Banking System - Required Information.", JOptionPane.INFORMATION_MESSAGE);
            } else {
                AccountDAO account = new AccountDAO();
                Account existingAccount = account.selectAccount(acctNo);

                if (existingAccount != null) {
                    txtSearchAcctNo2.setText(existingAccount.getAcctNo());
                    txtCustomerName2.setText(existingAccount.getCustomerName());
                    txtCurrBal2.setText(String.valueOf(existingAccount.getInitialBalance()));
                } else {
                    JOptionPane.showMessageDialog(this, "Bank Information With Account Number " + txtSearchAcctNo.getText() + " Not Found!", "Banking System - Bank Not Found", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error! Can't Connect be to Database! Please Contact System Administrator.", "Banking System - Connection Error.", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnSearch4ActionPerformed

    private void txtSearchAcctNo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchAcctNo2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchAcctNo2ActionPerformed

    private void txtCustomerName2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustomerName2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCustomerName2ActionPerformed

    private void btnSearchAcct1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchAcct1ActionPerformed
        // TODO add your handling code here:
      
        DefaultTableModel model = (DefaultTableModel) tblAllUsers.getModel();
        try {

            int rows = 0;
            AccountDAO account = new AccountDAO();
            List<Account> accountUsers = (List<Account>) account.viewAllAccounts();
            //System.out.println();
            while (accountUsers.size() > rows) {
                model.setValueAt(accountUsers.get(rows).getAcctNo(), rows, 0);
                model.setValueAt(accountUsers.get(rows).getCustomerName(), rows, 1);
                model.setValueAt(accountUsers.get(rows).getBranch(), rows, 2);
                model.setValueAt(accountUsers.get(rows).getAccountType(), rows, 3);
                model.setValueAt(accountUsers.get(rows).getInitialBalance(), rows, 4);
                rows++;

            }
            String tot = String.valueOf(rows);
            lblTotal.setText(tot);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        //getAllUsers();
    }//GEN-LAST:event_btnSearchAcct1ActionPerformed

    private void btnSearchAcct2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchAcct2ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblAllUsers1.getModel();
        try {

            int rows = 0;
            UserDAO account = new UserDAO();
            List<User> systemUsers = (List<User>) account.viewAllUsers();
            //System.out.println();
            while (systemUsers.size() > rows) {
                model.setValueAt(systemUsers.get(rows).getId(), rows, 0);
                model.setValueAt(systemUsers.get(rows).getUsername(), rows, 1);
                model.setValueAt(systemUsers.get(rows).getRole(), rows, 2);
                rows++;

            }
            String tot = String.valueOf(rows);
            lblTotal.setText(tot);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnSearchAcct2ActionPerformed

    private void btnSearchAcct3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchAcct3ActionPerformed
        try {
            String userSearch = txtSearchUser.getText();

            if (userSearch.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please Enter Username Number to Search!", "Banking System - Required Information.", JOptionPane.INFORMATION_MESSAGE);
            } else {
                UserDAO user = new UserDAO();
                User existingUser = user.selectAccount(userSearch);

                if (existingUser != null) {
                    txtUser.setText(existingUser.getUsername());
                    txtUserPw.setText(existingUser.getPassword());
                } else {
                    JOptionPane.showMessageDialog(this, "Cashier Account With Username " + txtSearchUser.getText() + " Not Found!", "Banking System - Cashier Account Not Found", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error! Can't Connect be to Database! Please Contact System Administrator.", "Banking System - Connection Error.", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnSearchAcct3ActionPerformed

    private void btnCreateUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateUserActionPerformed
        String un = "";
        String username = txtUser.getText();
        String password = String.valueOf(txtUserPw.getPassword());
        if (username.isEmpty() || password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please Fill in All Required Information!", "Banking SYstem - Required Information.", JOptionPane.INFORMATION_MESSAGE);
        } else {
            UserDAO user = new UserDAO();
            User existinguser = null;
            try {
                existinguser = user.selectAccount(username);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ApplicationMainMenu.class.getName()).log(Level.SEVERE, null, ex);
            }

            if (existinguser != null) {
                un = existinguser.getUsername();
            }
            if (un.intern().equals(username.intern())) {
                //Info Already Exist (Must Not Insert Duplicate Info)
                JOptionPane.showMessageDialog(this, "Cashier Account With Username " + username + " Already Exist!", "Banking System - Cashier Account Already Exist.", JOptionPane.INFORMATION_MESSAGE);
            } else if (!un.intern().equals(username.intern())) {

                User newUser = new User(username, password);
                try {
                    user.createUser(newUser);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(ApplicationMainMenu.class.getName()).log(Level.SEVERE, null, ex);
                }

                JOptionPane.showMessageDialog(this, "Cashier account has been Created Successfully!", "Banking System - Bank Account Created.", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnCreateUserActionPerformed

    private void btnDeleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteUserActionPerformed
        try {
            String un = "";
            String cashierAcc = txtUser.getText();
            String acctNo1 = txtAcctNo.getText();

            if (cashierAcc.isEmpty() && acctNo1.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please Enter Username to Delete!", "Banking System - Required Information.", JOptionPane.INFORMATION_MESSAGE);
            } else {
                //Show a Confirmation Dialog.
                int reply = JOptionPane.showConfirmDialog(this,
                        "Are you Sure You Want to Delete the Bank Information With Account Number " + cashierAcc + " from the Database?",
                        "Banking System - Confirm Deletion?", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                //Check the User Selection.
                if (reply == JOptionPane.YES_OPTION) {

                    UserDAO user = new UserDAO();
                    User existinguser = null;
                    try {
                        existinguser = user.selectAccount(cashierAcc);
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(ApplicationMainMenu.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    if (existinguser != null) {
                        un = existinguser.getUsername();
                    }
                    if (!cashierAcc.intern().equals(un.intern())) {
                        //Stud Info Not Found
                        JOptionPane.showMessageDialog(this, "Bank Information With Account Number " + cashierAcc + " Doesn't Exist!", "Banking System - Bank Doesn't Exist.", JOptionPane.INFORMATION_MESSAGE);
                    } else if (cashierAcc.intern().equals(un.intern())) {
                        //User newUser = new User();
                        user.deleteAccount(un);
                        //Bank Successfully Deleted
                        JOptionPane.showMessageDialog(this, "Bank Information has been Deleted Successfully!", "Banking System - Bank Deleted.", JOptionPane.INFORMATION_MESSAGE);
                    }
                } else if (reply == JOptionPane.NO_OPTION) {
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error! Can't Connect be to Database! Please Contact System Administrator.", "Banking System - Connection Error.", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnDeleteUserActionPerformed

    private void btnModifyUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyUserActionPerformed
        // TODO add your handling code here:
        int userId;
        String un = "";
        String searchName = txtSearchUser.getText();
        String username = txtUser.getText();
        String password = String.valueOf(txtUserPw.getPassword());
        if (username.isEmpty() || password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please Fill in All Required Information!", "Banking SYstem - Required Information.", JOptionPane.INFORMATION_MESSAGE);
        } else {
            UserDAO user = new UserDAO();
            User existinguser = null;
            try {
                existinguser = user.selectAccount(searchName);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ApplicationMainMenu.class.getName()).log(Level.SEVERE, null, ex);
            }

            if (existinguser != null) {
                un = existinguser.getUsername();
                userId = existinguser.getId();
                System.out.println(userId);

                try {
                    //Info Already Exist (Must Not Insert Duplicate Info)
                    User newUser = new User(userId, username, password);
                    user.updateCashier(newUser);
                    JOptionPane.showMessageDialog(this, "Cashier account has been Updated Successfully!", "Banking System - Cashier Account Updated.", JOptionPane.INFORMATION_MESSAGE);

                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(ApplicationMainMenu.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
    }//GEN-LAST:event_btnModifyUserActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ApplicationMainMenu.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ApplicationMainMenu.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ApplicationMainMenu.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ApplicationMainMenu.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ApplicationMainMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnClear1;
    private javax.swing.JButton btnClear3;
    private javax.swing.JButton btnCreateUser;
    private javax.swing.JButton btnDeleteAcct;
    private javax.swing.JButton btnDeleteUser;
    private javax.swing.JButton btnDeposit;
    private javax.swing.JButton btnModifyAcct;
    private javax.swing.JButton btnModifyUser;
    private javax.swing.JButton btnOpenAcct;
    private javax.swing.JButton btnRegister3;
    private javax.swing.JButton btnSearch1;
    private javax.swing.JButton btnSearch2;
    private javax.swing.JButton btnSearch4;
    private javax.swing.JButton btnSearchAcct;
    private javax.swing.JButton btnSearchAcct1;
    private javax.swing.JButton btnSearchAcct2;
    private javax.swing.JButton btnSearchAcct3;
    private javax.swing.JButton btnViewAll;
    private javax.swing.JComboBox cboAccountType;
    private javax.swing.JComboBox cboBranch;
    private javax.swing.JComboBox cboSex;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanelCashier;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabcashier;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTable tblAllUsers;
    private javax.swing.JTable tblAllUsers1;
    private javax.swing.JTable tblTransactions;
    private javax.swing.JTextField txtAcctNo;
    private javax.swing.JTextField txtCurrBal1;
    private javax.swing.JTextField txtCurrBal2;
    private javax.swing.JTextField txtCustomerName;
    private javax.swing.JTextField txtCustomerName1;
    private javax.swing.JTextField txtCustomerName2;
    private javax.swing.JTextField txtInitialBalance;
    private javax.swing.JTextField txtSearchAcctNo;
    private javax.swing.JTextField txtSearchAcctNo1;
    private javax.swing.JTextField txtSearchAcctNo2;
    private javax.swing.JTextField txtSearchAcctNo3;
    private javax.swing.JTextField txtSearchUser;
    private javax.swing.JTextField txtUser;
    private javax.swing.JPasswordField txtUserPw;
    private javax.swing.JTextField txtWithAmt1;
    private javax.swing.JTextField txtWithAmt2;
    // End of variables declaration//GEN-END:variables
}
